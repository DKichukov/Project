import java.io.*;import java.text.DateFormat;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Locale;import java.util.Objects;import java.util.Scanner;import java.util.regex.Matcher;import java.util.regex.Pattern;public class EmployeeVacationProgram {    public static void printTableFormat() {        System.out.print("|N:| ");        System.out.print("  Име:   | ");        System.out.print(" Имайл | ");        System.out.print("    ID:  |");        System.out.print("Начало|");        System.out.print("Край|");        System.out.print("  Тип |");        System.out.print("Статус| ");        System.out.println();    }    public static boolean isValid(String email) {        String emailRegex = "^[A-Z\\d._%+-]+@[A-Z\\d.-]+\\.[A-Z]{2,6}$";        Pattern emailPat = Pattern.compile(emailRegex, Pattern.CASE_INSENSITIVE);        Matcher matcher = emailPat.matcher(email);        return matcher.find();    }    public static boolean isDateFormatValid(String date) {        DateFormat df = new SimpleDateFormat("dd.MM.yyyy");        df.setLenient(false);        try {            df.parse(date.trim());        } catch (ParseException pe) {            return false;        }        return true;    }    public static boolean isIdNumberTenDigits(String num) {        return num.length() == 10;    }    public static boolean checkHolidayType(String text) {        if (Objects.equals(text, "платена")) {            return true;        } else {            return Objects.equals(text, "неплатена");        }    }    public static String checkName(String[][] tableNames, String enteredName) {        String checkNames = "";        for (int i = 0; i < readCsvFile(); i++) {            checkNames = tableNames[i][1].equals(enteredName.toLowerCase()) ? "true" : "false";        }        if (checkNames.equals("true")) {            System.out.println();        } else {            System.out.println("Няма служител с това име!");        }        return checkNames;    }    public static int readCsvFile() {        int lnCounter = 0;        String path = "database.csv";        String rowNum = "";        try {            BufferedReader br = new BufferedReader(new FileReader(path));            while ((rowNum = br.readLine()) != null) {                lnCounter++;               if (rowNum.trim().isEmpty()) {                   lnCounter--;                   break;               }            }        } catch (IOException e) {            System.out.print("CSV data file read error!");            e.printStackTrace();        }        return lnCounter;    }    public static void copyCsvFileToArray(String[][] dataFile) throws IOException {        int lnCount = 0;        String line = "";        BufferedReader br = new BufferedReader(new FileReader("database.csv"));        while ((line = br.readLine()) != null) {            lnCount++;            if (line.trim().isEmpty()) {                lnCount--;                break;            }            String[] data = (line.split(","));            for (int comaCounter = 0; comaCounter < dataFile[0].length; comaCounter++) {                dataFile[lnCount-1][comaCounter] = data[comaCounter] + "";            }        }        br.close();    }    public static void saveDataToCSVFile(String[] data) {        try {            FileWriter fw = new FileWriter("database.csv", true);            BufferedWriter bw = new BufferedWriter(fw);            bw.flush();            for (String tempData : data) {                bw.write(tempData + ",");            }            bw.close();        } catch (IOException e) {            System.out.println("Error!");            e.printStackTrace();        }    }    public static void saveChangesToCSVFile(String[][] table) {        //String line = "";        try {            FileWriter fw = new FileWriter("database.csv", false);            BufferedWriter bw = new BufferedWriter(fw);            for (int i = 0; i < table.length; i++) {                for (int j = 0; j < table[0].length; j++) {                    if (table[i][j] != null) {                        bw.write(table[i][j] + ",");                    }                }                bw.newLine();            }            bw.close();        } catch (IOException e) {            System.out.println("File saving error!");            e.printStackTrace();        }    }    public static void main(String[] args) throws IOException {        Scanner sc = new Scanner(System.in);        int count = readCsvFile();        String[][] table = new String[20][8];        int ch;        copyCsvFileToArray(table);        do {            System.out.println("---------------------------------------------");            System.out.println("    1. Заяви отпуска");            System.out.println("    2. Виж всички отпуски");            System.out.println("    3. Виж отпуска за служител");            System.out.println("    4. Промени статус на отпуска");            System.out.println("    5. Иход");            System.out.println("---------------------------------------------");            System.out.println("count is ->" + count);            System.out.println("Въведи избор:");            ch = sc.nextInt();            switch (ch) {                case 1 -> {                    String loopEnd;                    do {                        //count++;                        table[count][0] = String.valueOf(1+count);                        System.out.println("Въведи име: ");                        table[count][1] = sc.next();                        do {                            System.out.println("Въведи имейл: ");                            table[count][2] = sc.next();                            System.out.println(isValid(table[count][2]) ? "" : " Въвели сте грешен мейл. Опитайте отново!");                        } while (!isValid(table[count][2]));                        do {                            System.out.println("Въведи ЕГН (десет цифри):");                            table[count][3] = sc.next();                            System.out.println(isIdNumberTenDigits(table[count][3]) ? "" : " Въвели сте грешно ЕГН. Опитайте отново!");                        } while (table[count][3].length() != 10);                        do {                            System.out.println("Въведи начална дата на отпуската (формат:дд.мм.гггг)");                            table[count][4] = sc.next();                            System.out.println(isDateFormatValid(table[count][4]) ? "" : "Въвели сте грешен формат за дата. Опитайте отново!");                        } while (!isDateFormatValid(table[count][4]));                        do {                            System.out.println("Въведи крайна дата на отпуската (формат:дд.мм.гггг)");                            table[count][5] = sc.next();                            System.out.println(isDateFormatValid(table[count][5]) ? "" : "Въвели сте грешен формат за дата. Опитайте отново!");                        } while (!isDateFormatValid(table[count][5]));                        do {                            System.out.println("Въведи тип на отпуска планена или неплатена ):");                            table[count][6] = sc.next();                            System.out.println(checkHolidayType(table[count][6]) ? "" : "Въведен е грешен тип. Опитайте отново!");                        } while (!checkHolidayType(table[count][6]));                        System.out.println("Статус:");                        table[count][7] = sc.next();                        System.out.println("Искате ли да въведете друг колега? да/не");                        loopEnd = sc.next();                        saveDataToCSVFile(table[count]);                        count++;                    } while (loopEnd.equals("да"));                }                case 2 -> {                    printTableFormat();                    for (int i = 0; i < count; i++) {                        for (int j = 0; j < table[0].length; j++) {                            System.out.print("|" + table[i][j]);                        }                        System.out.println("|");                    }                }                // checkEmployeeHoliday list                case 3 -> {                    String[][] buffer = new String[table.length][table[0].length];                    sc.nextLine();                    System.out.println("Въведи име на служител:");                    String enteredName = sc.nextLine();                   if(checkName(table, enteredName).equals("true")) {                       printTableFormat();                   }else {                       System.out.println();                   }                    for (int i = 0; i <= count; i++) {                        if (enteredName.equalsIgnoreCase(table[i][1])) {                            for (int j = 0; j < table[0].length; j++) {                                buffer[i][j] = table[i][j];                                System.out.print("|" + buffer[i][j]);                            }                            System.out.println("|");                        }                    }                }                case 4 -> {                    System.out.println("Изберете номер на заявка: ");                    int numRequest = sc.nextInt()-1;                    printTableFormat();                    for (int j = 0; j < table[0].length; j++) {                        System.out.print("|" + table[numRequest][j]);                    }                    System.out.println("|");                    System.out.println("Въведи нов статус за избраната заявка:");                    String newStat = sc.next();                    table[numRequest][7] = newStat;                    for (int j = 0; j < table[0].length; j++) {                        // toSave[j] = table[numRequest][j];                        System.out.print("|" + table[numRequest][j]);                    }                    System.out.println("|");                    saveChangesToCSVFile(table);                }                case 5 -> System.out.println("Край на програмата!");               default -> System.out.println("Въвели сте грешен избор!!!");            }        } while (ch != 5);    }}